#
# Azure Pipelines

trigger:
- gh-pages

pool:
  vmImage: 'ubuntu-latest'

variables:
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  gh_user: jterral
  gh_repo: jterral.github.io
  gh_pass: $(GITHUB_TOKEN)

steps:
- task: UseRubyVersion@0
  displayName: '[Ruby] Use Ruby >= 2.5'
  inputs:
    versionSpec: '>= 2.5'
    addToPath: true

- script: |
    sudo apt-get install libxslt-dev libxml2-dev
  displayName: '[Apt] Install dev dependencies'

- script: |
    gem install bundler
  displayName: '[Gem] Install bundler'

# - script: |
#     gem install jekyll
#   displayName: '[Gem] Install jekyll'

- script: |
    bundle install --retry=3 --jobs=4
  displayName: '[Jekyll] Bundle install'

- script: |
    bundle exec jekyll build
  displayName: '[Jekyll] Build Jekyll Static Site to _site'

# - script: |
#     cp -R $(Build.StagingDirectory)/.git /tmp/
#     cp -R $(Build.StagingDirectory)/_site/* /tmp/
#     ls -al /tmp
#   displayName: '[Script] Clean source to commit new site'

- script: |
    ls -al
  displayName: '[Script] ls -al'

- task: CopyFiles@2
  displayName: '[Script] Copy files to: $(Build.StagingDirectory)'
  inputs:
    sourceFolder: '_site'
    targetFolder: $(Build.StagingDirectory)

- task: CopyFiles@2
  displayName: '[Script] Copy .git to: $(Build.StagingDirectory)'
  inputs:
    sourceFolder: '.git'
    targetFolder: $(Build.StagingDirectory)/.git

- task: DeleteFiles@1
  displayName: '[Script] Clean local folder'
  inputs:
    contents: '**/*'

- script: |
    ls -al $(Build.StagingDirectory)
  displayName: '[Script] ls -al $(Build.StagingDirectory)'

- script: |
    ls -al
  displayName: '[Script] ls -al'


# - script: |
#     git commit -am "Azure Pipelines Bot: Updated site via $(Build.SourceVersion)"
#   displayName: '[Git] Creating commit'

# - script: |
#     git push origin gh-pages:master
#   displayName: '[Git] git push to master'

# - task: CopyFiles@2
#   displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
#   inputs:
#     sourceFolder: '_site'
#     targetFolder: '$(Build.ArtifactStagingDirectory)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: site
